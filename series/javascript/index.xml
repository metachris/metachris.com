<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JavaScript on Chris Hager</title><link>https://www.metachris.com/series/javascript/</link><description>Recent content in JavaScript on Chris Hager</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 31 May 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://www.metachris.com/series/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>How to test Vue.js plugins and extensions</title><link>https://www.metachris.com/2017/05/how-to-test-vue.js-plugins-and-extensions/</link><pubDate>Wed, 31 May 2017 00:00:00 +0000</pubDate><guid>https://www.metachris.com/2017/05/how-to-test-vue.js-plugins-and-extensions/</guid><description>This post shows how to write tests for Vue.js plugins and extensions by creating Vue.js instances, changing state and validating transformation and expected errors, to continuously verify that everything still works after updates, refactorings and merging contributions.
While building python-boilerplate.com, I recently created a Vue.js plugin for syntax highlighting (vue-highlightjs), and wanted to add tests. For this I spent some time researching and testing how to properly test Vue.js plugins and extensions, and I wanted to summarize and share what I&amp;rsquo;ve learnt.</description></item></channel></rss>