<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ethereum on Chris Hager</title><link>https://www.metachris.com/tags/ethereum/</link><description>Recent content in Ethereum on Chris Hager</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 21 Jul 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.metachris.com/tags/ethereum/index.xml" rel="self" type="application/rss+xml"/><item><title>Securing private keys with a high-performance, threshold signature-based protocol</title><link>https://www.metachris.com/2021/07/securing-private-keys-with-a-high-performance-threshold-signature-based-protocol/</link><pubDate>Wed, 21 Jul 2021 00:00:00 +0000</pubDate><guid>https://www.metachris.com/2021/07/securing-private-keys-with-a-high-performance-threshold-signature-based-protocol/</guid><description>This post is about the paper &amp;ldquo;Improving security for users of decentralized exchanges through multiparty computation&amp;rdquo;, by Robert Annessi and Ethan Fast.
The paper introduces an effective algorithm for secure, collaborative signature generation using threshold signatures, and an API-key based client/server protocol that allows user-specific limits and restrictions as well as key revocations and rotations.
The method supports all blockchains that use ECDSA and EdDSA signatures, which includes Bitcoin, Ethereum and the majority of popular cryptocurrencies.</description></item><item><title>Creating Go Bindings for Ethereum Smart Contracts</title><link>https://www.metachris.com/2021/05/creating-go-bindings-for-ethereum-smart-contracts/</link><pubDate>Sun, 30 May 2021 00:00:00 +0000</pubDate><guid>https://www.metachris.com/2021/05/creating-go-bindings-for-ethereum-smart-contracts/</guid><description>&lt;script src="https://code.jquery.com/jquery-1.12.4.min.js" integrity="sha256-ZosEbRLbNQzLpnKIkEdrPv7lOy9C27hHQ+Xp8a4MxAQ=" crossorigin="anonymous">&lt;/script>
&lt;script src="https://www.metachris.com/js/load-photoswipe.js">&lt;/script>


&lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.css" integrity="sha256-sCl5PUOGMLfFYctzDW3MtRib0ctyUvI9Qsmq2wXOeBY=" crossorigin="anonymous" />
&lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/default-skin/default-skin.min.css" integrity="sha256-BFeI1V+Vh1Rk37wswuOYn5lsTcaU96hGaI7OUVCLjPc=" crossorigin="anonymous" />
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe.min.js" integrity="sha256-UplRCs9v4KXVJvVY+p+RSo5Q4ilAUXh7kpjyIP5odyc=" crossorigin="anonymous">&lt;/script>
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/photoswipe/4.1.1/photoswipe-ui-default.min.js" integrity="sha256-PWHOlUzc96pMc8ThwRIXPn8yH4NOLu42RQ0b9SpnpFk=" crossorigin="anonymous">&lt;/script>


&lt;div class="pswp" tabindex="-1" role="dialog" aria-hidden="true">

&lt;div class="pswp__bg">&lt;/div>

&lt;div class="pswp__scroll-wrap">
 
 &lt;div class="pswp__container">
 &lt;div class="pswp__item">&lt;/div>
 &lt;div class="pswp__item">&lt;/div>
 &lt;div class="pswp__item">&lt;/div>
 &lt;/div>
 
 &lt;div class="pswp__ui pswp__ui--hidden">
 &lt;div class="pswp__top-bar">
 
 &lt;div class="pswp__counter">&lt;/div>
 &lt;button class="pswp__button pswp__button--close" title="Close (Esc)">&lt;/button>
 &lt;button class="pswp__button pswp__button--share" title="Share">&lt;/button>
 &lt;button class="pswp__button pswp__button--fs" title="Toggle fullscreen">&lt;/button>
 &lt;button class="pswp__button pswp__button--zoom" title="Zoom in/out">&lt;/button>
 
 
 &lt;div class="pswp__preloader">
 &lt;div class="pswp__preloader__icn">
 &lt;div class="pswp__preloader__cut">
 &lt;div class="pswp__preloader__donut">&lt;/div>
 &lt;/div>
 &lt;/div>
 &lt;/div>
 &lt;/div>
 &lt;div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
 &lt;div class="pswp__share-tooltip">&lt;/div>
 &lt;/div>
 &lt;button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
 &lt;/button>
 &lt;button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
 &lt;/button>
 &lt;div class="pswp__caption">
 &lt;div class="pswp__caption__center">&lt;/div>
 &lt;/div>
 &lt;/div>
 &lt;/div>
&lt;/div>

&lt;p>To interact with Ethereum smart contracts in Go programs, you need bindings for the specific type of contract.
This post is a quick guide for generating these bindings from various sources:&lt;/p>
&lt;ol>
&lt;li>Manually compiled Solidity contract&lt;/li>
&lt;li>Smart contracts with Truffle (eg. &lt;a href="https://openzeppelin.com/contracts/">OpenZeppelin contracts&lt;/a>)&lt;/li>
&lt;li>Compiling a contract on &lt;a href="http://remix.ethereum.org/">remix.ethereum.org&lt;/a>&lt;/li>
&lt;li>Using the Etherscan ABI API&lt;/li>
&lt;li>Prebuilt Go bindings&lt;/li>
&lt;/ol></description></item></channel></rss>